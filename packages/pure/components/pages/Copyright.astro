---
import type { CollectionKey, InferEntrySchema } from 'astro:content'
import config from 'virtual:config'
import { shareList } from '../../schemas/share'
import { cn, getFormattedDate } from '../../utils'
import { Icon } from '../user'

interface Props<T extends CollectionKey> {
  data: InferEntrySchema<T>
  class?: string
}

const {
  data: { title, publishDate },
  class: className
} = Astro.props

// const image = typeof heroImage?.src === 'string' ? heroImage?.src : (heroImage?.src?.src ?? '')

const shares = {
  x: {
    link: `https://x.com/intent/tweet?text=${title}&url=${Astro.url}&via=${config.xHandle}`
  },
  linkedin: {
    link: `https://www.linkedin.com/sharing/share-offsite/?url=${Astro.url}`
  },
  bluesky: {
    link: `https://bsky.app/intent/compose?text=${title}%0A${Astro.url}`
  },
  weibo: {
    link: `http://service.weibo.com/share/share.php?url=${Astro.url}&title=${title}`
  }
} satisfies Record<(typeof shareList)[number], { link: string }>
---

<div
  class={cn(
    'relative flex flex-col gap-y-2 rounded-xl border px-3 sm:px-4 py-2 sm:py-3',
    className
  )}
>
  <Icon class='absolute end-4 top-4 size-20 opacity-10' name='copyright' />

  {/* title & link */}
  <div class='flex flex-col'>
    <div class='font-medium text-foreground'>{title}</div>
    <div class='text-sm'>{Astro.url}</div>
  </div>

  {/* common info */}
  <div class='flex flex-row flex-wrap justify-start gap-x-5 gap-y-1 sm:gap-x-8'>
    <div class='flex gap-x-2 sm:flex-col'>
      <span>Author</span>
      <span class='text-sm text-foreground max-sm:place-self-center'>{config.author}</span>
    </div>
    {
      publishDate && (
        <div class='flex gap-x-2 sm:min-w-16 sm:flex-col'>
          <span>Published at</span>
          <span class='text-sm text-foreground max-sm:place-self-center'>
            {getFormattedDate(publishDate, {
              month: 'long'
            })}
          </span>
        </div>
      )
    }
    <div class='flex gap-x-2 sm:flex-col'>
      <span>Copyright</span>
      <a
        class='text-sm text-foreground max-sm:place-self-center'
        href='https://creativecommons.org/licenses/by/4.0/'
        target='_blank'
      >
        CC BY-NC-SA 4.0
      </a>
    </div>
  </div>

  {/* functions */}
  <div class='relative'>
    <div class='flex flex-row gap-3'>
      <button
        id='copy-link'
        class='group rounded-full bg-muted p-1 text-muted-foreground transition-colors hover:text-primary sm:p-1.5'
      >
        <Icon class='size-5' name='link' />
      </button>
      {
        config.content.share.map((share) => (
          <a
            href={shares[share].link}
            target='_blank'
            id={`share-${share}`}
            class='group rounded-full bg-muted p-1 text-muted-foreground transition-colors hover:text-primary sm:p-1.5'
          >
            <Icon class='size-5' name={share} />
          </a>
        ))
      }
    </div>
  </div>
</div>

<div class='mx-6 rounded-b-xl border border-t-0 px-3 pb-1.5 pt-1 sm:mx-8 sm:px-4'>
  <a
    href='https://buymeacoffee.com/prrao87'
    class='flex items-center justify-between text-muted-foreground no-underline'
    target='_blank'
  >
    <span>Buy me a cup of coffee â˜•.</span>
    <Icon class='box-content size-5 p-1' name='receive-money' />
  </a>
</div>

<script>
  import { showToast } from '../../utils'

  // Copy link
  const copyLink = document.getElementById('copy-link')
  copyLink?.addEventListener('click', () => {
    navigator.clipboard.writeText(window.location.href)
    // Show toast
    showToast({ message: 'Link copied!' })
  })
</script>
